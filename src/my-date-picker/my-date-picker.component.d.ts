import { EventEmitter, OnInit, OnChanges, SimpleChange, ElementRef } from '@angular/core';
import { IMyDate, IMyMonth, IMyDayLabels, IMyMonthLabels } from './interfaces/index';
export declare class MyDatePicker implements OnInit, OnChanges {
    elem: ElementRef;
    options: any;
    locale: string;
    defaultMonth: string;
    selDate: string;
    dateChanged: EventEmitter<Object>;
    showSelector: boolean;
    visibleMonth: IMyMonth;
    defaultDate: IMyDate;
    selectedDate: IMyDate;
    weekDays: Array<string>;
    dates: Array<Object>;
    selectionDayTxt: string;
    dayIdx: number;
    today: Date;
    PREV_MONTH: number;
    CURR_MONTH: number;
    NEXT_MONTH: number;
    dayLabels: IMyDayLabels;
    monthLabels: IMyMonthLabels;
    dateFormat: string;
    todayBtnTxt: string;
    firstDayOfWeek: string;
    sunHighlight: boolean;
    height: string;
    width: string;
    disableUntil: IMyDate;
    disableSince: IMyDate;
    disableWeekends: boolean;
    inline: boolean;
    private _locales;
    constructor(elem: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: {
        [propName: string]: SimpleChange;
    }): void;
    removeBtnClicked(): void;
    openBtnClicked(): void;
    prevMonth(): void;
    nextMonth(): void;
    prevYear(): void;
    nextYear(): void;
    todayClicked(): void;
    cellClicked(cell: any): void;
    selectDate(date: any): void;
    preZero(val: string): string;
    formatDate(val: any): string;
    monthText(m: number): string;
    monthStartIdx(y: number, m: number): number;
    daysInMonth(m: number, y: number): number;
    daysInPrevMonth(m: number, y: number): number;
    isCurrDay(d: number, m: number, y: number, cmo: any): boolean;
    isDisabledDay(date: IMyDate): boolean;
    getTimeInMilliseconds(date: IMyDate): number;
    getDayNumber(date: IMyDate): number;
    sundayIdx(): number;
    createMonth(m: number, y: number): void;
    private _parseDate(ds);
}
